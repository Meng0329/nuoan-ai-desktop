name: 构建所有平台应用

on:
  workflow_dispatch:  # 手动触发
  push:
    tags:
      - 'v*'

jobs:
  # Windows 构建
  build-windows:
    name: 构建 Windows 应用
    runs-on: windows-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 设置 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: 安装依赖
      working-directory: desktop
      run: npm install
    
    - name: 构建 Windows 应用
      working-directory: desktop
      run: npm run build:win-no-sign-ci
      env:
        CSC_IDENTITY_AUTO_DISCOVERY: false
    
    - name: 上传 Windows 安装包
      uses: actions/upload-artifact@v4
      with:
        name: windows-installer
        path: |
          desktop/dist/*.exe
          desktop/dist/latest.yml

  # macOS 构建
  build-mac:
    name: 构建 macOS 应用
    runs-on: macos-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 设置 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: 安装依赖
      working-directory: desktop
      run: npm install
    
    - name: 构建 macOS 应用
      working-directory: desktop
      run: npm run build:mac
      env:
        CSC_IDENTITY_AUTO_DISCOVERY: false
    
    - name: 上传 macOS 安装包
      uses: actions/upload-artifact@v4
      with:
        name: macos-dmg
        path: |
          desktop/dist/*.dmg
          desktop/dist/latest-mac.yml

  # Linux 构建
  build-linux:
    name: 构建 Linux 应用
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
    
    - name: 设置 Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: 安装依赖
      working-directory: desktop
      run: npm install
    
    - name: 构建 Linux 应用
      working-directory: desktop
      run: npm run build:linux
    
    - name: 上传 Linux 安装包
      uses: actions/upload-artifact@v4
      with:
        name: linux-appimage
        path: desktop/dist/*.AppImage

  # 创建统一的 Release
  create-release:
    name: 创建 Release
    needs: [build-windows, build-mac, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: 下载所有构建产物
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: 显示下载的文件
      run: |
        echo "下载的构建产物:"
        find artifacts -type f
    
    - name: 创建 GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/windows-installer/*.exe
          artifacts/macos-dmg/*.dmg
          artifacts/linux-appimage/*.AppImage
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
